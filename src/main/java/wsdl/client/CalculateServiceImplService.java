
/*
 * 
 */

package wsdl.client;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.2.9
 * Tue Sep 06 16:54:24 CST 2016
 * Generated source version: 2.2.9
 * 
 */


@WebServiceClient(name = "CalculateServiceImplService", 
                  wsdlLocation = "file:/C:/Users/wangweiwei/Desktop/caculate.xml",
                  targetNamespace = "http://utils.email.chit.com/") 
public class CalculateServiceImplService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://utils.email.chit.com/", "CalculateServiceImplService");
    public final static QName CalculateServiceImplPort = new QName("http://utils.email.chit.com/", "CalculateServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/wangweiwei/Desktop/caculate.xml");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/C:/Users/wangweiwei/Desktop/caculate.xml");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public CalculateServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CalculateServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CalculateServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns CalculateService
     */
    @WebEndpoint(name = "CalculateServiceImplPort")
    public CalculateService getCalculateServiceImplPort() {
        return super.getPort(CalculateServiceImplPort, CalculateService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculateService
     */
    @WebEndpoint(name = "CalculateServiceImplPort")
    public CalculateService getCalculateServiceImplPort(WebServiceFeature... features) {
        return super.getPort(CalculateServiceImplPort, CalculateService.class, features);
    }

}
